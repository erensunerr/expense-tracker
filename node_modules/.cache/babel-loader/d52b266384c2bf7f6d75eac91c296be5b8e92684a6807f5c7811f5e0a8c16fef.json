{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abi_b\\\\OneDrive\\\\Documents\\\\Mindera Code Academy\\\\react-bookkeeping-app\\\\src\\\\components\\\\ExpenseApp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseTrackerApp() {\n  _s();\n  const [expenses, setExpenses] = React.useState([]);\n  const [expense, setExpense] = React.useState(\"\");\n  const [cost, setCost] = React.useState(\"\");\n  const [isEditingCost, setIsEditingCost] = React.useState(null);\n  const [expenseName, setExpenseName] = React.useState(\"\");\n  const [isEditingExpense, setIsEditingExpense] = React.useState(null);\n  const [category, setCategory] = React.useState(\"\");\n  const [isEditingCategory, setIsEditingCategory] = React.useState(null);\n  function addExpense(e) {\n    // a common practice in React - page won't regresh when we are pressing our \"Add an Expense\" button because by default forms refresh the page when submitted\n    e.preventDefault();\n    const newExpense = {\n      id: new Date().getTime(),\n      expense: expense,\n      cost: parseFloat(cost),\n      category: category\n    };\n    // Check if the expense name is empty\n    if (!newExpense.expense || !newExpense.category) {\n      alert(\"Please enter all the fields.\");\n      return false;\n    }\n    // Check if the cost is empty\n    if (!newExpense.cost) {\n      alert(\"Please enter the cost.\");\n      return false;\n    }\n\n    // Check if the cost is negative\n    if (newExpense.cost <= 0) {\n      alert(\"Please enter a positive value for the cost.\");\n      return false;\n    }\n\n    // I have used a spread operator, because if we keep adding our expenses, they need to be stored in an array, and avoid data mutations\n    setExpenses([...expenses].concat(newExpense));\n    // we use this function to restore the second hook to its default value to an empty string so everytime it gets reset after submitting\n    setExpense(\"\");\n    setCost(\"\");\n    setCategory(\"\");\n  }\n  // this functions filters out the expense that we are trying to delete with the id\n  function deleteExpense(id) {\n    // we set up a variable -> if we return a truthy value, it will be included in the array, otherwise it will not include it\n    //so we are only filtering the ones where expense.id is not equal to id and it will be true for every expense except the one that we are deleting\n    const updatedExpenses = [...expenses].filter(expense => expense.id !== id);\n\n    // here we have set up an aditional confirmation to make sure we want to delete certain expense\n    if (window.confirm(\"Are you sure you want to delete this expense?\")) {\n      setExpenses(updatedExpenses);\n    }\n  }\n  function editExpense(id) {\n    const updatedExpenses = [...expenses].map(expense => {\n      if (expense.id === id) {\n        if (expenseName === \"\") {\n          expense.expense = expense.expense;\n        } else if (expenseName === \"\" || expenseName === undefined || expenseName === null) {\n          alert(\"Please enter a value for the expense.\");\n          return false;\n        } else {\n          expense.expense = expenseName;\n        }\n      }\n      return expense;\n    });\n    setExpenses(updatedExpenses);\n    setIsEditingExpense(null);\n    setExpenseName(\"\");\n  }\n\n  //a function to edit cost, I've created additional conditional that does not allow inserting negative or 0 values\n\n  function editCost(id) {\n    const updatedCost = [...expenses].map(expense => {\n      if (expense.id === id) {\n        if (cost === \"\") {\n          expense.cost = expense.cost;\n        } else if (cost <= 0) {\n          alert(\"Please enter a value for the cost.\");\n          return false;\n        } else {\n          expense.cost = cost;\n        }\n      }\n      return expense;\n    });\n    setCost(updatedCost);\n    setIsEditingCost(null);\n    setCost(\"\");\n  }\n  function editCategory(id) {\n    const updatedExpenses = [...expenses].map(expense => {\n      if (expense.id === id) {\n        if (category === \"\") {\n          expense.category = expense.category;\n        } else if (category === \"\" || category === undefined || category === null) {\n          alert(\"Please enter a value for the expense.\");\n          return false;\n        } else {\n          expense.category = category;\n        }\n      }\n      return expense;\n    });\n    setExpenses(updatedExpenses);\n    setIsEditingCategory(null);\n    setCategory(\"\");\n  }\n\n  // we added a value={expense} that is to make sure that there is a >two way binding< in our code to avoid bugs \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Expense Tracker App \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Enter your details \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addExpense,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Expense Name\",\n        onChange: e => setExpense(e.target.value),\n        value: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Cost\",\n        onChange: e => setCost(e.target.value),\n        value: cost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        onChange: e => setCategory(e.target.value),\n        value: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add an Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expense | Amount | Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), expenses.map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          fontSize: '1.2em'\n        },\n        children: [isEditingExpense === expense.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setExpenseName(e.target.value),\n          value: expenseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Expense: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 20\n          }, this), expense.expense, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), isEditingCost === expense.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setCost(e.target.value),\n          value: cost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cost: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 20\n          }, this), \"\\xA3\", expense.cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), isEditingCategory === expense.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setCategory(e.target.value),\n          value: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Category: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 14\n          }, this), expense.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteExpense(expense.id),\n          children: \"Delete Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditingExpense(expense.id),\n          children: \"Edit Expense Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editExpense(expense.id),\n          children: \"Submit Expense Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditingCost(expense.id),\n          children: \"Edit Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editCost(expense.id),\n          children: \"Submit Cost Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditingCategory(expense.id),\n          children: \"Edit Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editCategory(expense.id),\n          children: \"Submit Category Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, expense.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseTrackerApp, \"gAQlvmRJgRZ7nRU1Mw7CuuvZfdE=\");\n_c = ExpenseTrackerApp;\nexport default ExpenseTrackerApp;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTrackerApp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpenseTrackerApp","_s","expenses","setExpenses","useState","expense","setExpense","cost","setCost","isEditingCost","setIsEditingCost","expenseName","setExpenseName","isEditingExpense","setIsEditingExpense","category","setCategory","isEditingCategory","setIsEditingCategory","addExpense","e","preventDefault","newExpense","id","Date","getTime","parseFloat","alert","concat","deleteExpense","updatedExpenses","filter","window","confirm","editExpense","map","undefined","editCost","updatedCost","editCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","value","style","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abi_b/OneDrive/Documents/Mindera Code Academy/react-bookkeeping-app/src/components/ExpenseApp.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nfunction ExpenseTrackerApp() {\r\n  const [expenses, setExpenses] = React.useState([])\r\n  const [expense, setExpense] = React.useState(\"\")\r\n  const [cost, setCost] = React.useState(\"\")\r\n  const [isEditingCost, setIsEditingCost] = React.useState(null)\r\n\r\n  const [expenseName, setExpenseName] = React.useState(\"\")\r\n  const [isEditingExpense, setIsEditingExpense] = React.useState(null)\r\n \r\n  const [category, setCategory] = React.useState(\"\")\r\n  const [isEditingCategory, setIsEditingCategory] = React.useState(null);\r\n\r\n\r\n  \r\n\r\n  \r\n  \r\n\r\nfunction addExpense(e) {\r\n  // a common practice in React - page won't regresh when we are pressing our \"Add an Expense\" button because by default forms refresh the page when submitted\r\n  e.preventDefault()\r\n \r\n\r\n  const newExpense = {\r\n    id: new Date().getTime(),\r\n    expense: expense,\r\n    cost: parseFloat(cost),\r\n    category: category,\r\n  }\r\n    // Check if the expense name is empty\r\n    if (!newExpense.expense || !newExpense.category) {\r\n     alert(\"Please enter all the fields.\");\r\n     return false;\r\n   }\r\n   // Check if the cost is empty\r\n    if (!newExpense.cost) {\r\n     alert(\"Please enter the cost.\");\r\n     return false;\r\n   }\r\n  \r\n   // Check if the cost is negative\r\n   if (newExpense.cost <= 0) {\r\n     alert(\"Please enter a positive value for the cost.\");\r\n     return false;\r\n   }\r\n  \r\n\r\n// I have used a spread operator, because if we keep adding our expenses, they need to be stored in an array, and avoid data mutations\r\n  setExpenses([...expenses].concat(newExpense))\r\n// we use this function to restore the second hook to its default value to an empty string so everytime it gets reset after submitting\r\n  setExpense(\"\")\r\n  setCost(\"\")\r\n  setCategory(\"\")\r\n} \r\n// this functions filters out the expense that we are trying to delete with the id\r\nfunction deleteExpense(id) {\r\n\r\n  // we set up a variable -> if we return a truthy value, it will be included in the array, otherwise it will not include it\r\n  //so we are only filtering the ones where expense.id is not equal to id and it will be true for every expense except the one that we are deleting\r\n  const updatedExpenses = [...expenses].filter((expense) => expense.id !== id)\r\n\r\n  // here we have set up an aditional confirmation to make sure we want to delete certain expense\r\n  if (window.confirm(\"Are you sure you want to delete this expense?\")) {\r\n    setExpenses(updatedExpenses)\r\n  }\r\n}\r\n\r\nfunction editExpense(id) {\r\n  const updatedExpenses = [...expenses].map((expense) => {\r\n    if (expense.id === id) {\r\n      if (expenseName === \"\") {\r\n        expense.expense = expense.expense;\r\n      } else if (expenseName === \"\" || expenseName === undefined || expenseName === null) {\r\n        alert(\"Please enter a value for the expense.\");\r\n        return false;\r\n      } else {\r\n        expense.expense = expenseName;\r\n      }\r\n    }\r\n    return expense;\r\n  });\r\n  setExpenses(updatedExpenses);\r\n  setIsEditingExpense(null);\r\n  setExpenseName(\"\");\r\n}\r\n\r\n\r\n//a function to edit cost, I've created additional conditional that does not allow inserting negative or 0 values\r\n\r\nfunction editCost(id) {\r\n  const updatedCost = [...expenses].map((expense) => {\r\n    if (expense.id === id) {\r\n      if (cost === \"\") {\r\n        expense.cost = expense.cost;\r\n      } else if (cost <= 0) {\r\n        alert(\"Please enter a value for the cost.\");\r\n        return false;\r\n      } else {\r\n        expense.cost = cost;\r\n      }\r\n    }\r\n    return expense;\r\n  });\r\n  setCost(updatedCost);\r\n  setIsEditingCost(null);\r\n  setCost(\"\");\r\n}\r\n\r\nfunction editCategory(id) {\r\n  const updatedExpenses = [...expenses].map((expense) => {\r\n    if (expense.id === id) {\r\n      if (category === \"\") {\r\n        expense.category = expense.category;\r\n      } else if (category === \"\" || category === undefined || category === null) {\r\n        alert(\"Please enter a value for the expense.\");\r\n        return false;\r\n      } else {\r\n        expense.category = category;\r\n      }\r\n    }\r\n    return expense;\r\n  });\r\n  setExpenses(updatedExpenses);\r\n  setIsEditingCategory(null);\r\n  setCategory(\"\");\r\n}\r\n\r\n\r\n\r\n\r\n// we added a value={expense} that is to make sure that there is a >two way binding< in our code to avoid bugs \r\n  return (\r\n    <div className=\"App\">\r\n      <h1> Expense Tracker App </h1>\r\n      <h2> Enter your details </h2>\r\n      <form onSubmit={addExpense}>\r\n        <input type=\"text\" placeholder=\"Expense Name\" onChange={(e) => setExpense(e.target.value)} value={expense}/>\r\n        <input type=\"number\" placeholder=\"Cost\" onChange={(e) => setCost(e.target.value)} value={cost}/>\r\n        <input type=\"text\" placeholder=\"Category\" onChange={(e) => setCategory(e.target.value)} value={category}/>\r\n        <button type=\"submit\">Add an Expense</button>\r\n      </form>\r\n\r\n      <ul>\r\n        <h3>Expense | Amount | Category</h3>\r\n      {expenses.map((expense) => (\r\n        <li key={expense.id} style={{fontSize: '1.2em'}}>\r\n\r\n        {isEditingExpense === expense.id ? (\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setExpenseName(e.target.value)}\r\n                value = {expenseName}\r\n              />\r\n            ) : (\r\n              <div><b>Expense: </b>{expense.expense} </div>\r\n            )}\r\n\r\n        {isEditingCost === expense.id ? (\r\n              <input\r\n                type=\"number\"\r\n                onChange={(e) => setCost(e.target.value)}\r\n                value = {cost}\r\n              />\r\n            ) : (\r\n              <div><b>Cost: </b>£{expense.cost}</div>\r\n            )}\r\n\r\n            {isEditingCategory === expense.id ? (\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          value={category}\r\n        />\r\n      ) : (\r\n        <div><b>Category: </b>{expense.category}</div>\r\n      )}\r\n\r\n     \r\n\r\n          <button onClick={() => deleteExpense(expense.id)}>Delete Expense</button> <span> </span>\r\n          <button onClick={() => setIsEditingExpense(expense.id)}>Edit Expense Name</button>\r\n          <button onClick={() => editExpense(expense.id)}>Submit Expense Edits</button>\r\n          <button onClick={() => setIsEditingCost(expense.id)}>Edit Cost</button>\r\n          <button onClick={() => editCost(expense.id)}>Submit Cost Edits</button>\r\n          <button onClick={() => setIsEditingCategory(expense.id)}>Edit Category</button>\r\n          <button onClick={() => editCategory(expense.id)}>Submit Category Edits</button>\r\n        </li>\r\n      ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseTrackerApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}