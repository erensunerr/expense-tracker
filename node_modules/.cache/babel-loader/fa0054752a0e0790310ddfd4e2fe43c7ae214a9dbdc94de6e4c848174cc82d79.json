{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abi_b\\\\OneDrive\\\\Documents\\\\Mindera Code Academy\\\\react-bookkeeping-app\\\\src\\\\components\\\\ExpenseApp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseTrackerApp() {\n  _s();\n  const [expenses, setExpenses] = React.useState([]);\n  const [expense, setExpense] = React.useState(\"\");\n  const [cost, setCost] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [expenseEditing, setExpenseEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n  const [costEditing, setCostEditing] = React.useState(null);\n  const [editingCost, setEditingCost] = React.useState(\"\");\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [categories] = useState([]);\n  function addExpense(e) {\n    // a common practice in React - page won't regresh when we are pressing our \"Add an Expense\" button because by default forms refresh the page when submitted\n    e.preventDefault();\n    const newExpense = {\n      id: new Date().getTime(),\n      expense: expense,\n      cost: parseFloat(cost),\n      category: category\n    };\n    // Check if the expense name is empty\n    if (!newExpense.expense || !newExpense.category) {\n      alert(\"Please enter all the fields.\");\n      return false;\n    }\n    // Check if the cost is empty\n    if (!newExpense.cost) {\n      alert(\"Please enter the cost.\");\n      return false;\n    }\n\n    // Check if the cost is negative\n    if (newExpense.cost <= 0) {\n      alert(\"Please enter a positive value for the cost.\");\n      return false;\n    }\n\n    // I have used a spread operator, because if we keep adding our expenses, they need to be stored in an array, and avoid data mutations\n    setExpenses([...expenses].concat(newExpense));\n    // we use this function to restore the second hook to its default value to an empty string so everytime it gets reset after submitting\n    setExpense(\"\");\n    setCost(\"\");\n    setCategory(\"\");\n  }\n  // this functions filters out the expense that we are trying to delete with the id\n  function deleteExpense(id) {\n    // we set up a variable -> if we return a truthy value, it will be included in the array, otherwise it will not include it\n    //so we are only filtering the ones where expense.id is not equal to id and it will be true for every expense except the one that we are deleting\n    const updatedExpenses = [...expenses].filter(expense => expense.id !== id);\n\n    // here we have set up an aditional confirmation to make sure we want to delete certain expense\n    if (window.confirm(\"Are you sure you want to delete this expense?\")) {\n      setExpenses(updatedExpenses);\n    }\n  }\n  function editExpense(id) {\n    const updatedExpenses = [...expenses].map(expense => {\n      if (expense.id === id) {\n        expense.expense = editingText;\n      }\n      return expense;\n    });\n    setExpenses(updatedExpenses);\n    setExpenseEditing(null);\n    setEditingText(\"\");\n  }\n  function editCost(id) {\n    const updatedCost = [...expenses].map(expense => {\n      if (expense.id === id) {\n        expense.cost = editingCost;\n      }\n      return expense;\n    });\n    setCost(updatedCost);\n    setCostEditing(null);\n    setEditingCost(\"\");\n  }\n\n  // we added a value={expense} that is to make sure that there is a >two way binding< in our code to avoid bugs \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addExpense,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter an expense\",\n        onChange: e => setExpense(e.target.value),\n        value: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter an cost\",\n        onChange: e => setCost(e.target.value),\n        value: cost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a category\",\n        onChange: e => setCategory(e.target.value),\n        value: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add an Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expense | Amount | Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), expenses.map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          fontSize: '1.2em'\n        },\n        children: [expenseEditing === expense.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEditingText(e.target.value),\n          value: editingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [expense.expense, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" | \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 38\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), costEditing === expense.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setEditingCost(e.target.value),\n          value: editingCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\xA3\", expense.cost, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" | \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 36\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), expense.category, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteExpense(expense.id),\n          children: \"Delete Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 85\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 100\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setExpenseEditing(expense.id),\n          children: \"Edit Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editExpense(expense.id),\n          children: \"Submit Expense Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCostEditing(expense.id),\n          children: \"Edit Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editCost(expense.id),\n          children: \"Submit Edit Costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, expense.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseTrackerApp, \"+IoskJ+eaXY73LpSB23hg5xI5GE=\");\n_c = ExpenseTrackerApp;\n/*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Here is a summary of your expenses:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Total Expenses: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"total-expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: totalExpenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Amount of categories: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: categories.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Total items for \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }, this), \" is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: expenses.filter(expense => expense.category === category).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }, this), \"Total expenses for \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 34\n      }, this), \" is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: expenses.filter(expense => expense.category === category).reduce((a, b) => a + b.amount, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 64\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 2\n}, this);\nexport default ExpenseTrackerApp;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTrackerApp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpenseTrackerApp","_s","expenses","setExpenses","useState","expense","setExpense","cost","setCost","category","setCategory","expenseEditing","setExpenseEditing","editingText","setEditingText","costEditing","setCostEditing","editingCost","setEditingCost","totalExpenses","setTotalExpenses","categories","addExpense","e","preventDefault","newExpense","id","Date","getTime","parseFloat","alert","concat","deleteExpense","updatedExpenses","filter","window","confirm","editExpense","map","editCost","updatedCost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","value","style","fontSize","onClick","_c","length","reduce","a","b","amount","$RefreshReg$"],"sources":["C:/Users/abi_b/OneDrive/Documents/Mindera Code Academy/react-bookkeeping-app/src/components/ExpenseApp.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nfunction ExpenseTrackerApp() {\r\n  const [expenses, setExpenses] = React.useState([])\r\n  const [expense, setExpense] = React.useState(\"\")\r\n  const [cost, setCost] = React.useState(\"\")\r\n  const [category, setCategory] = React.useState(\"\")\r\n  const [expenseEditing, setExpenseEditing] = React.useState(null)\r\n  const [editingText, setEditingText] = React.useState(\"\")\r\n  const [costEditing, setCostEditing] = React.useState(null)\r\n  const [editingCost, setEditingCost] = React.useState(\"\")\r\n  const [totalExpenses, setTotalExpenses] = useState(0);\r\n  const [categories] = useState([]);\r\n\r\n  \r\n  \r\n\r\nfunction addExpense(e) {\r\n  // a common practice in React - page won't regresh when we are pressing our \"Add an Expense\" button because by default forms refresh the page when submitted\r\n  e.preventDefault()\r\n \r\n\r\n  const newExpense = {\r\n    id: new Date().getTime(),\r\n    expense: expense,\r\n    cost: parseFloat(cost),\r\n    category: category,\r\n  }\r\n    // Check if the expense name is empty\r\n    if (!newExpense.expense || !newExpense.category) {\r\n     alert(\"Please enter all the fields.\");\r\n     return false;\r\n   }\r\n   // Check if the cost is empty\r\n    if (!newExpense.cost) {\r\n     alert(\"Please enter the cost.\");\r\n     return false;\r\n   }\r\n  \r\n   // Check if the cost is negative\r\n   if (newExpense.cost <= 0) {\r\n     alert(\"Please enter a positive value for the cost.\");\r\n     return false;\r\n   }\r\n  \r\n\r\n// I have used a spread operator, because if we keep adding our expenses, they need to be stored in an array, and avoid data mutations\r\n  setExpenses([...expenses].concat(newExpense))\r\n// we use this function to restore the second hook to its default value to an empty string so everytime it gets reset after submitting\r\n  setExpense(\"\")\r\n  setCost(\"\")\r\n  setCategory(\"\")\r\n} \r\n// this functions filters out the expense that we are trying to delete with the id\r\nfunction deleteExpense(id) {\r\n\r\n  // we set up a variable -> if we return a truthy value, it will be included in the array, otherwise it will not include it\r\n  //so we are only filtering the ones where expense.id is not equal to id and it will be true for every expense except the one that we are deleting\r\n  const updatedExpenses = [...expenses].filter((expense) => expense.id !== id)\r\n\r\n  // here we have set up an aditional confirmation to make sure we want to delete certain expense\r\n  if (window.confirm(\"Are you sure you want to delete this expense?\")) {\r\n    setExpenses(updatedExpenses)\r\n  }\r\n}\r\n\r\nfunction editExpense(id) {\r\n  const updatedExpenses = [...expenses].map((expense) => {\r\n    if (expense.id === id) {\r\n      expense.expense = editingText;\r\n    }\r\n    return expense;\r\n  });\r\n  setExpenses(updatedExpenses);\r\n  setExpenseEditing(null);\r\n  setEditingText(\"\");\r\n}\r\n\r\nfunction editCost(id) {\r\n  const updatedCost = [...expenses].map((expense) => {\r\n    if (expense.id === id) {\r\n      expense.cost = editingCost;\r\n    }\r\n    return expense;\r\n  });\r\n  setCost(updatedCost);\r\n  setCostEditing(null);\r\n  setEditingCost(\"\");\r\n}\r\n\r\n\r\n\r\n\r\n// we added a value={expense} that is to make sure that there is a >two way binding< in our code to avoid bugs \r\n  return (\r\n    <div className=\"App\">\r\n      <br></br><br></br>\r\n      <form onSubmit={addExpense}>\r\n        <input type=\"text\" placeholder=\"Enter an expense\" onChange={(e) => setExpense(e.target.value)} value={expense}/>\r\n        <input type=\"number\" placeholder=\"Enter an cost\" onChange={(e) => setCost(e.target.value)} value={cost}/>\r\n        <input type=\"text\" placeholder=\"Enter a category\" onChange={(e) => setCategory(e.target.value)} value={category}/>\r\n        <button type=\"submit\">Add an Expense</button>\r\n      </form>\r\n\r\n      <ul>\r\n        <h3>Expense | Amount | Category</h3>\r\n      {expenses.map((expense) => (\r\n        <li key={expense.id} style={{fontSize: '1.2em'}}>\r\n\r\n        {expenseEditing === expense.id ? (\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setEditingText(e.target.value)}\r\n                value = {editingText}\r\n              />\r\n            ) : (\r\n              <div>{expense.expense} <span> | </span> </div>\r\n            )}\r\n\r\n        {costEditing === expense.id ? (\r\n              <input\r\n                type=\"number\"\r\n                onChange={(e) => setEditingCost(e.target.value)}\r\n                value = {editingCost}\r\n              />\r\n            ) : (\r\n              <div>£{expense.cost} <span> | </span> </div>\r\n            )}\r\n\r\n          {expense.category} <span> </span>\r\n          <button onClick={() => deleteExpense(expense.id)}>Delete Expense</button> <span> </span> <br></br>\r\n          <button onClick={() => setExpenseEditing(expense.id)}>Edit Expense</button>\r\n          <button onClick={() => editExpense(expense.id)}>Submit Expense Edits</button>\r\n          <button onClick={() => setCostEditing(expense.id)}>Edit Cost</button>\r\n          <button onClick={() => editCost(expense.id)}>Submit Edit Costs</button>\r\n        </li>\r\n      ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n <div>\r\n        <ul>\r\n        <h4>Here is a summary of your expenses:</h4>\r\n          <li>\r\n          Total Expenses: <b>$</b><span id=\"total-expenses\"><b>{totalExpenses}</b></span>\r\n          </li>\r\n          <li>\r\n            Amount of categories: <b>{categories.length}</b>\r\n          </li>\r\n          {categories.map((category) => (\r\n            <li key={category}>\r\n              Total items for <b>{category}</b> is: <b>{expenses.filter((expense) => expense.category === category).length}</b>\r\n              <span> | </span>\r\n              Total expenses for <b>{category}</b> is: <b>$</b><span><b>{expenses.filter((expense) => expense.category === category).reduce((a, b) => a + b.amount, 0)}</b></span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\nexport default ExpenseTrackerApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}