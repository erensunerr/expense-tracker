{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abi_b\\\\OneDrive\\\\Documents\\\\Mindera Code Academy\\\\react-bookkeeping-app\\\\src\\\\components\\\\ExpenseApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseTrackerApp = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [categories] = useState([]);\n  const addExpense = e => {\n    // a common practice in React - page won't regresh when we are pressing our \"Add an Expense\" button because by default forms refresh the page when submitted\n    e.preventDefault();\n    const newExpense = {\n      id: new Date().getTime(),\n      expense: e.target.elements.expense.value,\n      amount: parseFloat(e.target.elements.amount.value),\n      category: e.target.elements.category.value,\n      done: false\n    };\n\n    // Check if the expense name is empty\n    if (!newExpense.expense || !newExpense.category) {\n      alert(\"Please enter all the fields.\");\n      return false;\n    }\n    // Check if the cost is empty\n    if (!newExpense.cost) {\n      alert(\"Please enter the cost.\");\n      return false;\n    }\n\n    // Check if the cost is negative\n    if (newExpense.cost <= 0) {\n      alert(\"Please enter a positive value for the cost.\");\n      return false;\n    }\n    // I have used a spread operator, because if we keep adding our expenses, they need to be stored in an array, and avoid data mutations\n    setExpenses([...expenses, newExpense]);\n    setTotalExpenses(totalExpenses + newExpense.amount);\n\n    // we use this function to restore the second hook to its default value to an empty string so everytime it gets reset after submitting\n\n    const category = newExpense.category;\n    if (!categories.includes(category)) {\n      categories.push(category);\n    }\n  };\n  const removeExpense = index => {\n    setExpenses(expenses.slice(0, index).concat(expenses.slice(index + 1)));\n    setTotalExpenses(totalExpenses - expenses[index].amount);\n  };\n  const editExpense = index => {\n    const expense = expenses[index];\n    setExpenses(expenses => expenses.map(t => t.id === expense.id ? {\n      ...t,\n      done: !t.done\n    } : t));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addExpense,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter an expense\",\n        id: \"expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter an amount\",\n        id: \"amount\",\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a category\",\n        id: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expense | Amount | Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), expenses.map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          fontSize: '1.2em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\" \", expense.expense, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" | \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", expense.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" | \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), expense.category, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm(\"Are you sure you want to delete this record?\")) {\n              const index = expenses.indexOf(expense);\n              removeExpense(index);\n            }\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editExpense(expense.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, expense.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Here is a summary of your expenses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total Expenses: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"total-expenses\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: totalExpenses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Amount of categories: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: categories.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total items for \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 31\n          }, this), \" is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: expenses.filter(expense => expense.category === category).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" | \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), \"Total expenses for \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 34\n          }, this), \" is: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: expenses.filter(expense => expense.category === category).reduce((a, b) => a + b.amount, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 64\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseTrackerApp, \"YjK/ls0xB0PaTkHOOMIatlkn6Ps=\");\n_c = ExpenseTrackerApp;\nexport default ExpenseTrackerApp;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTrackerApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseTrackerApp","_s","expenses","setExpenses","totalExpenses","setTotalExpenses","categories","addExpense","e","preventDefault","newExpense","id","Date","getTime","expense","target","elements","value","amount","parseFloat","category","done","alert","cost","includes","push","removeExpense","index","slice","concat","editExpense","map","t","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","min","style","fontSize","onClick","window","confirm","indexOf","length","filter","reduce","a","b","_c","$RefreshReg$"],"sources":["C:/Users/abi_b/OneDrive/Documents/Mindera Code Academy/react-bookkeeping-app/src/components/ExpenseApp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ExpenseTrackerApp = () => {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [totalExpenses, setTotalExpenses] = useState(0);\r\n  const [categories] = useState([]);\r\n\r\n  const addExpense = (e) => {\r\n     // a common practice in React - page won't regresh when we are pressing our \"Add an Expense\" button because by default forms refresh the page when submitted\r\n    e.preventDefault();\r\n    const newExpense = {\r\n      id: new Date().getTime(),\r\n      expense: e.target.elements.expense.value,\r\n      amount: parseFloat(e.target.elements.amount.value),\r\n      category: e.target.elements.category.value,\r\n      done: false,\r\n    };\r\n\r\n      // Check if the expense name is empty\r\n    if (!newExpense.expense || !newExpense.category) {\r\n     alert(\"Please enter all the fields.\");\r\n     return false;\r\n   }\r\n   // Check if the cost is empty\r\n    if (!newExpense.cost) {\r\n     alert(\"Please enter the cost.\");\r\n     return false;\r\n   }\r\n  \r\n   // Check if the cost is negative\r\n   if (newExpense.cost <= 0) {\r\n     alert(\"Please enter a positive value for the cost.\");\r\n     return false;\r\n    }\r\n    // I have used a spread operator, because if we keep adding our expenses, they need to be stored in an array, and avoid data mutations\r\n    setExpenses([...expenses, newExpense]);\r\n    setTotalExpenses(totalExpenses + newExpense.amount);\r\n\r\n    // we use this function to restore the second hook to its default value to an empty string so everytime it gets reset after submitting\r\n\r\n    \r\n    const category = newExpense.category;\r\n    if (!categories.includes(category)) {\r\n      categories.push(category);\r\n    }\r\n  };\r\n\r\n  const removeExpense = (index) => {\r\n    setExpenses(expenses.slice(0, index).concat(expenses.slice(index + 1)));\r\n    setTotalExpenses(totalExpenses - expenses[index].amount);\r\n  };\r\n\r\n  const editExpense = (index) => {\r\n    const expense = expenses[index];\r\n    setExpenses((expenses) => expenses.map((t) => t.id === expense.id ? { ...t, done: !t.done } : t));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n          <h1>Expense Tracker</h1>\r\n      <form onSubmit={addExpense}>\r\n        <input type=\"text\" placeholder=\"Enter an expense\" id=\"expense\" />\r\n        <input type=\"number\" placeholder=\"Enter an amount\" id=\"amount\" min=\"0\" />\r\n        <input type=\"text\" placeholder=\"Enter a category\" id=\"category\" />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      <ul>\r\n          <h3>Expense | Amount | Category</h3>\r\n        {expenses.map((expense) => (\r\n          <li key={expense.id} style={{fontSize: '1.2em'}}>\r\n           <b> {expense.expense}\r\n            <span> | </span>\r\n            <span>${expense.amount}</span>\r\n            <span> | </span>\r\n            {expense.category}\r\n            <span> </span></b>\r\n            <button onClick={() => {\r\n              if (window.confirm(\"Are you sure you want to delete this record?\")) {\r\n                const index = expenses.indexOf(expense);\r\n                removeExpense(index);\r\n              }\r\n            }}>\r\n              Delete\r\n            </button>\r\n            <span> </span>\r\n            <button onClick={() => editExpense(expense.id)}>\r\n              Edit\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <ul>\r\n        <h4>Here is a summary of your expenses:</h4>\r\n          <li>\r\n          Total Expenses: <b>$</b><span id=\"total-expenses\"><b>{totalExpenses}</b></span>\r\n          </li>\r\n          <li>\r\n            Amount of categories: <b>{categories.length}</b>\r\n          </li>\r\n          {categories.map((category) => (\r\n            <li key={category}>\r\n              Total items for <b>{category}</b> is: <b>{expenses.filter((expense) => expense.category === category).length}</b>\r\n              <span> | </span>\r\n              Total expenses for <b>{category}</b> is: <b>$</b><span><b>{expenses.filter((expense) => expense.category === category).reduce((a, b) => a + b.amount, 0)}</b></span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseTrackerApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}